package models

import (
	"github.com/hajimehoshi/ebiten/v2"
)

// Projectile is an entity generated by towers that flies to the enemy
// and deals the damage to it.
// Projectiles never misses the enemy and achieves the aim when TTL is equal to zero.
type Projectile struct {
	Pos         Point // current position on a map
	Vrms        Coord
	Vx          Coord
	Vy          Coord
	Type        TypeAttack
	Damage      int
	TTL         Frames
	TargetEnemy *Enemy
	Image       *ebiten.Image
}

func (p *Projectile) Update() {
	p.move()
}

func (p *Projectile) Draw(screen *ebiten.Image) {
	geom := ebiten.GeoM{}
	geom.Translate(float64(p.Pos.X-float32(p.Image.Bounds().Dx()/2)), float64(p.Pos.Y-float32(p.Image.Bounds().Dy()/2)))
	screen.DrawImage(p.Image, &ebiten.DrawImageOptions{GeoM: geom})
}

// Move moves the projectile on the map.
func (p *Projectile) move() {
	p.Pos.X += p.Vx
	p.Pos.Y += p.Vy
	p.TTL--
}

// EnemyHit checks if the projectile hit the enemy and returns true if it is.
func (p *Projectile) EnemyHit() bool {
	if p.TTL == 0 {
		p.TargetEnemy.DealDamage(p.TargetEnemy.FinalDamage(p.Type, p.Damage))
		return true
	}
	return false
}
